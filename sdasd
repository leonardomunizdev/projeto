import React from 'react';
import { Modal, FlatList, View, Text, TextInput, Button, TouchableOpacity } from 'react-native';
import styles from '../../styles/screens/OptionsScreenStyles';
import { Ionicons } from '@expo/vector-icons';
import { useAccounts } from '../../context/AccountContext';

const {accounts} = useAccounts


// Funções para gerenciar contas
const handleAddAccount = () => {
  if (newAccountName.trim() === '') {
    Alert.alert('Erro', 'O nome da conta não pode estar vazio.');
    return;
  }
  addAccount(newAccountName);
  setNewAccountName('');
  setIsAccountModalVisible(false);
};

const confirmRemoveAccount = (accountId) => {
  removeAccount(accountId);
  setIsConfirmModalVisible(false);
};

const cancelRemoveAccount = () => {
  setIsConfirmModalVisible(false);
};
const AccountModal = ({ visible, onClose, onSave, newAccountName, setNewAccountName }) => (
 
   
 
 <Modal
        visible={visible}
        animationType="slide"
        onRequestClose={onClose}
        transparent={true}
      >
        <View style={styles.fullScreenModal}>
          <View style={styles.modalContent}>
            <TouchableOpacity
              style={styles.closeButton}
              onPress={onClose}
            >
              <Ionicons name="close" size={24} color="black" />
            </TouchableOpacity>
            <Text style={styles.modalTitle}>Gerir Contas</Text>
            <TextInput
              style={styles.input}
              value={newAccountName}
              onChangeText={setNewAccountName}
              placeholder="Nome da nova conta"
            />
            <Button title="Adicionar Conta" onPress={handleAddAccount} />
            <FlatList
              data={accounts}
              keyExtractor={item => item.id}
              renderItem={({ item }) => (
                <View style={styles.accountItem}>
                  <Text style={styles.accountName}>{item.name}</Text>
                  <TouchableOpacity onPress={() => handleRemoveAccount(item.id)}>
                    <Text style={styles.removeButton}>Remover</Text>
                  </TouchableOpacity>
                </View>
              )}
            />
          </View>
        </View>
      </Modal>
);

export default AccountModal;
